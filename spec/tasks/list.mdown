# TaskLists

A TaskList is a named collection of tasks. All tasks are associated with at least one TaskList.

A **TaskList** object has the following properties:

- **id**: `Id` (immutable; server-set)
  The id of the task list.
- **role**: `String|null` (default: null)
  Denotes the task list has a special purpose. This MUST be one of the following:

    - `inbox`: This is the principal's default task list;
    - `trash`: This task list holds messages the user has discarded;

- **name**: `String`
  The user-visible name of the task list. This may be any UTF-8 string of at least 1 character in length and maximum 255 octets in size.
- **description**: `String|null` (default: null)
  An optional longer-form description of the task list, to provide context in shared environments where users need more than just the name.
- **color**: `String|null` (default: null)
  A color to be used when displaying events associated with the task list.

    If not null, the value MUST be a case-insensitive color name taken from the set of names defined in Section 4.3 of CSS Color Module Level 3 [COLORS](https://www.w3.org/TR/css-color-3/), or an RGB value in hexadecimal notation, as defined in Section 4.2.1 of CSS Color Module Level 3.

    The color SHOULD have sufficient contrast to be used as text on a white background.

- **sortOrder**: `UnsignedInt` (default: 0)
  Defines the sort order of task lists when presented in the client's UI, so it
  is consistent between devices. The number MUST be an integer in the range
  0 <= sortOrder < 2^31.

    A task list with a lower order should be displayed before a list with
    a higher order in any list of task lists in the client's UI. Task lists with equal order SHOULD be sorted in alphabetical order by name. The sorting should take into account locale-specific character order convention.

- **isSubscribed**: `Boolean`
  Has the user indicated they wish to see this task list in their client? This SHOULD default to false for task lists in shared accounts the user has access to and true for any new task list created by the user themself.

    If false, the task list should only be displayed when the user explicitly
    requests it or to offer it for the user to subscribe to.

- **isVisible**: `Boolean` (default: true)
  Should the task list's events be displayed to the user at the moment? Clients MUST ignore this property if isSubscribed is false. If an event is in multiple task lists, it should be displayed if isVisible is true for any of those task lists.

- **defaultAlertsWithTime**: `Id[Alert]|null` (default: null)
  A map of alert ids to Alert objects (see [@!I-D.ietf-calext-jscalendar], Section 4.5.2) to apply for events where "showWithoutTime" is false and "useDefaultAlerts" is true. Ids MUST be unique across all default alerts in the account, including those in other task lists; a UUID is recommended.
- **defaultAlertsWithoutTime**: `Id[Alert]|null` (default: null)
  A map of alert ids to Alert objects (see [@!I-D.ietf-calext-jscalendar], Section 4.5.2) to apply for events where "showWithoutTime" is true and "useDefaultAlerts" is true. Ids MUST be unique across all default alerts in the account, including those in other task lists; a UUID is recommended.
- **timeZone**: `String|null` (default: null)
  The time zone to use for events without a time zone when the server needs to resolve them into absolute time, e.g., for alerts or availability calculation. The value MUST be a time zone id from the IANA Time Zone Database [TZDB](https://www.iana.org/time-zones). If `null`, the timeZone of the account's associated Principal will be used. Clients SHOULD use this as the default for new events in this task list if set.
- **shareWith**: `Id[CalendarRights]|null` (default: null)
  A map of Principal id to rights for principals this calendar is shared with. The principal to which this task list belongs MUST NOT be in this set. This is null if the user requesting the object does not have the mayAdmin right, or if the task list  is not shared with anyone. May be modified only if the user has the mayAdmin right. The account id for the principals may be found in the `urn:ietf:params:jmap:principals:owner` capability of the Account to which the calendar belongs.

The user is an **owner** for a task if the Task object has an "assignee" property, and one of the Participant objects both:

1. Has the "chair" role.
1. Corresponds to one of the user's AssigneeIdentity objects in the account.
  
A task has no owner if its assignee property is null or omitted.

TODO currently disregarding `myRights`

## TaskList/get

This is a standard "/get" method as described in [@!RFC8620], Section 5.1. The *ids* argument may be `null` to fetch all at once.

TODO add part about rights properties.

## TaskList/changes

This is a standard "/changes" method as described in [@!RFC8620], Section 5.2.

## TaskList/set

This is the "Calendar/set" method as described in [@!I-D.ietf-jmap-calendars], Section XXX.

TODO copy+paste from "Calendar/set" and replace `onDestroyRemoveEvents` by `onDestroyRemoveTasks` (and `calendarHasEvent`).
